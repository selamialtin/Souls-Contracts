/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Signer,
  utils,
  Contract,
  ContractFactory,
  BigNumberish,
  Overrides,
} from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../../common";
import type { Staking, StakingInterface } from "../../contracts/Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_tokenContractAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "_managersContractAddress",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakePercentagePer1Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakePercentagePer3Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakePercentagePer6Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_stakePercentagePer12Month",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeDate",
        type: "uint256",
      },
    ],
    name: "EmergencyWithdraw",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeDate",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "releaseDate",
        type: "uint256",
      },
    ],
    name: "Stake",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "stakeDate",
        type: "uint256",
      },
    ],
    name: "Withdraw",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newAmount",
        type: "uint256",
      },
    ],
    name: "changeMinimumStakingAmount",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newPercentagePer1Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPercentagePer3Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPercentagePer6Month",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_newPercentagePer12Month",
        type: "uint256",
      },
    ],
    name: "changeStakeAPYrates",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeIndex",
        type: "uint256",
      },
    ],
    name: "emergencyWithdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchOwnStakeData",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "monthToStake",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "withdrawn",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawTime",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakeData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "fetchStakeDataForAddress",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "amount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "stakeDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "releaseDate",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "percentage",
            type: "uint256",
          },
          {
            internalType: "uint16",
            name: "monthToStake",
            type: "uint16",
          },
          {
            internalType: "bool",
            name: "withdrawn",
            type: "bool",
          },
          {
            internalType: "uint256",
            name: "withdrawTime",
            type: "uint256",
          },
        ],
        internalType: "struct Staking.StakeData[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeIndex",
        type: "uint256",
      },
    ],
    name: "fetchStakeReward",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_penaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_stakeIndex",
        type: "uint256",
      },
    ],
    name: "fetchStakeRewardForAddress",
    outputs: [
      {
        internalType: "uint256",
        name: "_totalAmount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_penaltyAmount",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "fetchStakers",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getTotalBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "isStaker",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "minimumStakingAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "monthToSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "uint8",
        name: "_monthToStake",
        type: "uint8",
      },
    ],
    name: "stake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePercentagePer12Month",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePercentagePer1Month",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePercentagePer3Month",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "stakePercentagePer6Month",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakers",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "stakes",
    outputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "stakeDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "releaseDate",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "percentage",
        type: "uint256",
      },
      {
        internalType: "uint16",
        name: "monthToStake",
        type: "uint16",
      },
      {
        internalType: "bool",
        name: "withdrawn",
        type: "bool",
      },
      {
        internalType: "uint256",
        name: "withdrawTime",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "tokenContract",
    outputs: [
      {
        internalType: "contract ERC20Burnable",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalBurnedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalDistributedReward",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalStakedAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalWithdrawnAmount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "unpause",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_stakeIndex",
        type: "uint256",
      },
    ],
    name: "withdrawStake",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "yearToSecond",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405269021e19e0c9bab24000006002553480156200001f57600080fd5b5060405162003d1c38038062003d1c8339818101604052810190620000459190620001ae565b60008060006101000a81548160ff02191690831515021790555085600160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555084600060016101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555083600781905550826008819055508160098190555080600a819055505050505050506200024a565b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006200013b826200010e565b9050919050565b6200014d816200012e565b81146200015957600080fd5b50565b6000815190506200016d8162000142565b92915050565b6000819050919050565b620001888162000173565b81146200019457600080fd5b50565b600081519050620001a8816200017d565b92915050565b60008060008060008060c08789031215620001ce57620001cd62000109565b5b6000620001de89828a016200015c565b9650506020620001f189828a016200015c565b95505060406200020489828a0162000197565b94505060606200021789828a0162000197565b93505060806200022a89828a0162000197565b92505060a06200023d89828a0162000197565b9150509295509295509295565b613ac2806200025a6000396000f3fe608060405234801561001057600080fd5b50600436106101cf5760003560e01c80636f1e853311610104578063b0d2d011116100a2578063deaa8afd11610071578063deaa8afd146104df578063eca3e44a146104fd578063f03578441461051b578063fd5e6dd11461054c576101cf565b8063b0d2d01114610455578063bc528d8e14610473578063c2f87af714610491578063dd4ed851146104af576101cf565b806388c4ac26116100de57806388c4ac26146103df57806394ea8c9d146103fb5780639ebccfbd14610419578063ac1acc8114610437576101cf565b80636f1e85331461038957806377fccf32146103b95780638456cb59146103d5576101cf565b80633f4ba83a1161017157806355a373d61161014b57806355a373d6146102f9578063567e98f914610317578063584b62a1146103355780635c975abb1461036b576101cf565b80633f4ba83a146102a257806340dec2d0146102ac57806352c24400146102c8576101cf565b806325d5971f116101ad57806325d5971f1461022c57806332de10041461024857806335ab5f64146102665780633e57c69814610284576101cf565b806310087fb1146101d457806312b58349146101f05780631d8b44c51461020e575b600080fd5b6101ee60048036038101906101e99190612c54565b61057c565b005b6101f8610a25565b6040516102059190612ca3565b60405180910390f35b610216610ac8565b6040516102239190612ca3565b60405180910390f35b61024660048036038101906102419190612cbe565b610ace565b005b610250610f61565b60405161025d9190612e6f565b60405180910390f35b61026e61106a565b60405161027b9190612ca3565b60405180910390f35b61028c611070565b6040516102999190612ca3565b60405180910390f35b6102aa611076565b005b6102c660048036038101906102c19190612cbe565b6113b3565b005b6102e260048036038101906102dd9190612eef565b61169b565b6040516102f0929190612f2f565b60405180910390f35b610301611af9565b60405161030e9190612fb7565b60405180910390f35b61031f611b1f565b60405161032c9190612ca3565b60405180910390f35b61034f600480360381019061034a9190612eef565b611b25565b6040516103629796959493929190612ff0565b60405180910390f35b610373611b9f565b604051610380919061305f565b60405180910390f35b6103a3600480360381019061039e919061307a565b611bb5565b6040516103b0919061305f565b60405180910390f35b6103d360048036038101906103ce9190612cbe565b611bd5565b005b6103dd612202565b005b6103f960048036038101906103f491906130a7565b61253f565b005b610403612862565b6040516104109190612ca3565b60405180910390f35b610421612868565b60405161042e91906131cc565b60405180910390f35b61043f6128f6565b60405161044c9190612ca3565b60405180910390f35b61045d6128fd565b60405161046a9190612ca3565b60405180910390f35b61047b612903565b6040516104889190612ca3565b60405180910390f35b610499612909565b6040516104a69190612ca3565b60405180910390f35b6104c960048036038101906104c4919061307a565b61290f565b6040516104d69190612e6f565b60405180910390f35b6104e7612a1a565b6040516104f49190612ca3565b60405180910390f35b610505612a20565b6040516105129190612ca3565b60405180910390f35b61053560048036038101906105309190612cbe565b612a28565b604051610543929190612f2f565b60405180910390f35b61056660048036038101906105619190612cbe565b612a42565b60405161057391906131fd565b60405180910390f35b610584612a81565b6002548210156105c9576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016105c09061329b565b60405180910390fd5b60018160ff1614806105de575060038160ff16145b806105ec575060068160ff16145b806105fa5750600c8160ff16145b610639576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161063090613307565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b872dd3330856040518463ffffffff1660e01b815260040161069893929190613327565b6020604051808303816000875af11580156106b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106db919061338a565b61071a576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161071190613403565b60405180910390fd5b6000600754905060038260ff161415610737576008549050610761565b60068260ff16141561074d576009549050610760565b600c8260ff16141561075f57600a5490505b5b5b60006040518060e0016040528085815260200142815260200162278d008560ff1661078c9190613452565b4261079791906134ac565b81526020018381526020018460ff1661ffff16815260200160001515815260200160008152509050600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600602016000909190919091506000820151816000015560208201518160010155604082015181600201556060820151816003015560808201518160040160006101000a81548161ffff021916908361ffff16021790555060a08201518160040160026101000a81548160ff02191690831515021790555060c08201518160050155505083600360008282546108b191906134ac565b92505081905550600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff166109c557600b339080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506001600d60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505b3373ffffffffffffffffffffffffffffffffffffffff167ff556991011e831bcfac4f406d547e5e32cdd98267efab83935230d5f8d02c4468583602001518460400151604051610a1793929190613502565b60405180910390a250505050565b6000600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166370a08231306040518263ffffffff1660e01b8152600401610a8291906131fd565b602060405180830381865afa158015610a9f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac3919061354e565b905090565b60045481565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610b1f57610b1e61357b565b5b906000526020600020906006020160040160029054906101000a900460ff1615610b7e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b75906135f6565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110610bcf57610bce61357b565b5b906000526020600020906006020160020154421015610c23576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c1a90613662565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610c7657610c7561357b565b5b906000526020600020906006020160040160026101000a81548160ff02191690831515021790555042600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610cf057610cef61357b565b5b9060005260206000209060060201600501819055506000610d11338361169b565b509050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401610d71929190613682565b6020604051808303816000875af1158015610d90573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610db4919061338a565b610df3576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dea90613403565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610e4457610e4361357b565b5b90600052602060002090600602016000015460036000828254610e6791906136ab565b925050819055508060046000828254610e8091906134ac565b92505081905550600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110610ed857610ed761357b565b5b90600052602060002090600602016000015481610ef591906136ab565b60066000828254610f0691906134ac565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167ff279e6a1f5e320cca91135676d9cb6e44ca8a08c0b88342bcdb1144f6511b5688242604051610f55929190612f2f565b60405180910390a25050565b6060600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561106157838290600052602060002090600602016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900461ffff1661ffff1661ffff1681526020016004820160029054906101000a900460ff1615151515815260200160058201548152505081526020019060010190610fc2565b50505050905090565b60055481565b600a5481565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b81526004016110d191906131fd565b602060405180830381865afa1580156110ee573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611112919061338a565b611151576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016111489061372b565b60405180910390fd5b60006040518060400160405280601881526020017f556e7061757365205374616b696e6720436f6e7472616374000000000000000081525090506000600160405160200161119f919061305f565b6040516020818303038152906040529050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b9d94383836040518363ffffffff1660e01b815260040161120d929190613828565b600060405180830381600087803b15801561122757600080fd5b505af115801561123b573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f621394d83836040518363ffffffff1660e01b815260040161129c929190613828565b602060405180830381865afa1580156112b9573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112dd919061338a565b156113af576112ea612acb565b7f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa3360405161131991906131fd565b60405180910390a1600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa673836040518263ffffffff1660e01b815260040161137c919061385f565b600060405180830381600087803b15801561139657600080fd5b505af11580156113aa573d6000803e3d6000fd5b505050505b5050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b815260040161140e91906131fd565b602060405180830381865afa15801561142b573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061144f919061338a565b61148e576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114859061372b565b60405180910390fd5b6000604051806060016040528060228152602001613a6b6022913990506000826040516020016114be9190612ca3565b6040516020818303038152906040529050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b9d94383836040518363ffffffff1660e01b815260040161152c929190613828565b600060405180830381600087803b15801561154657600080fd5b505af115801561155a573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f621394d83836040518363ffffffff1660e01b81526004016115bb929190613828565b602060405180830381865afa1580156115d8573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115fc919061338a565b156116965782600281905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa673836040518263ffffffff1660e01b8152600401611663919061385f565b600060405180830381600087803b15801561167d57600080fd5b505af1158015611691573d6000803e3d6000fd5b505050505b505050565b6000806000600c60008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106116f1576116f061357b565b5b9060005260206000209060060201600201544210905060008161177657600c60008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020858154811061175f5761175e61357b565b5b906000526020600020906006020160020154611778565b425b90506000600c60008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002086815481106117cd576117cc61357b565b5b906000526020600020906006020160010154826117ea91906136ab565b905068056bc75e2d631000006301e133806118059190613452565b81600c60008a73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002088815481106118575761185661357b565b5b906000526020600020906006020160030154600c60008b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002089815481106118ba576118b961357b565b5b9060005260206000209060060201600001546118d69190613452565b6118e09190613452565b6118ea91906138b0565b600c60008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020878154811061193b5761193a61357b565b5b90600052602060002090600602016000015461195791906134ac565b94508215611aef57600062278d00600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002088815481106119b6576119b561357b565b5b906000526020600020906006020160040160009054906101000a900461ffff1661ffff166119e49190613452565b82600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208981548110611a3657611a3561357b565b5b906000526020600020906006020160030154611a529190613452565b611a5c91906138b0565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208881548110611aad57611aac61357b565b5b906000526020600020906006020160030154611ac991906136ab565b905068056bc75e2d631000008187611ae19190613452565b611aeb91906138b0565b9450505b5050509250929050565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60035481565b600c6020528160005260406000208181548110611b4157600080fd5b9060005260206000209060060201600091509150508060000154908060010154908060020154908060030154908060040160009054906101000a900461ffff16908060040160029054906101000a900460ff16908060050154905087565b60008060009054906101000a900460ff16905090565b600d6020528060005260406000206000915054906101000a900460ff1681565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611c2657611c2561357b565b5b906000526020600020906006020160040160029054906101000a900460ff1615611c85576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611c7c906135f6565b60405180910390fd5b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208181548110611cd657611cd561357b565b5b9060005260206000209060060201600201544210611d29576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d209061392d565b60405180910390fd5b6001600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611d7c57611d7b61357b565b5b906000526020600020906006020160040160026101000a81548160ff02191690831515021790555042600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208281548110611df657611df561357b565b5b906000526020600020906006020160050181905550600080611e18338461169b565b9150915060008183611e2a91906136ab565b9050600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663a9059cbb33836040518363ffffffff1660e01b8152600401611e89929190613682565b6020604051808303816000875af1158015611ea8573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611ecc919061338a565b611f0b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611f0290613403565b60405180910390fd5b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166342966c68836040518263ffffffff1660e01b8152600401611f669190612ca3565b600060405180830381600087803b158015611f8057600080fd5b505af1158015611f94573d6000803e3d6000fd5b505050508160056000828254611faa91906134ac565b925050819055508060046000828254611fc391906134ac565b92505081905550600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061201b5761201a61357b565b5b906000526020600020906006020160000154811161203a5760006120a9565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020848154811061208b5761208a61357b565b5b906000526020600020906006020160000154816120a891906136ab565b5b600660008282546120ba91906134ac565b92505081905550600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106121125761211161357b565b5b90600052602060002090600602016000015481116121305780612194565b600c60003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002084815481106121815761218061357b565b5b9060005260206000209060060201600001545b600360008282546121a591906136ab565b925050819055503373ffffffffffffffffffffffffffffffffffffffff167fbb757047c2b5f3974fe26b7c10f732e7bce710b0952a71082702781e62ae059582426040516121f4929190612f2f565b60405180910390a250505050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b815260040161225d91906131fd565b602060405180830381865afa15801561227a573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061229e919061338a565b6122dd576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016122d49061372b565b60405180910390fd5b60006040518060400160405280601681526020017f5061757365205374616b696e6720436f6e74726163740000000000000000000081525090506000600160405160200161232b919061305f565b6040516020818303038152906040529050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b9d94383836040518363ffffffff1660e01b8152600401612399929190613828565b600060405180830381600087803b1580156123b357600080fd5b505af11580156123c7573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f621394d83836040518363ffffffff1660e01b8152600401612428929190613828565b602060405180830381865afa158015612445573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612469919061338a565b1561253b57612476612b2d565b7f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258336040516124a591906131fd565b60405180910390a1600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa673836040518263ffffffff1660e01b8152600401612508919061385f565b600060405180830381600087803b15801561252257600080fd5b505af1158015612536573d6000803e3d6000fd5b505050505b5050565b600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f3ae2415336040518263ffffffff1660e01b815260040161259a91906131fd565b602060405180830381865afa1580156125b7573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125db919061338a565b61261a576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126119061372b565b60405180910390fd5b60006040518060400160405280601681526020017f4368616e6765205374616b652041505920526174657300000000000000000000815250905060008585858560405160200161266d949392919061394d565b6040516020818303038152906040529050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166323b9d94383836040518363ffffffff1660e01b81526004016126db929190613828565b600060405180830381600087803b1580156126f557600080fd5b505af1158015612709573d6000803e3d6000fd5b50505050600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f621394d83836040518363ffffffff1660e01b815260040161276a929190613828565b602060405180830381865afa158015612787573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906127ab919061338a565b1561285a5785600781905550846008819055508360098190555082600a81905550600060019054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f4daa673836040518263ffffffff1660e01b8152600401612827919061385f565b600060405180830381600087803b15801561284157600080fd5b505af1158015612855573d6000803e3d6000fd5b505050505b505050505050565b60075481565b6060600b8054806020026020016040519081016040528092919081815260200182805480156128ec57602002820191906000526020600020905b8160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190600101908083116128a2575b5050505050905090565b62278d0081565b60025481565b60085481565b60095481565b6060600c60008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015612a0f57838290600052602060002090600602016040518060e0016040529081600082015481526020016001820154815260200160028201548152602001600382015481526020016004820160009054906101000a900461ffff1661ffff1661ffff1681526020016004820160029054906101000a900460ff1615151515815260200160058201548152505081526020019060010190612970565b505050509050919050565b60065481565b6301e1338081565b600080612a35338461169b565b8092508193505050915091565b600b8181548110612a5257600080fd5b906000526020600020016000915054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b612a89611b9f565b15612ac9576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612ac0906139de565b60405180910390fd5b565b612ad3612b8f565b60008060006101000a81548160ff0219169083151502179055507f5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa612b16612bd8565b604051612b2391906131fd565b60405180910390a1565b612b35612a81565b60016000806101000a81548160ff0219169083151502179055507f62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258612b78612bd8565b604051612b8591906131fd565b60405180910390a1565b612b97611b9f565b612bd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612bcd90613a4a565b60405180910390fd5b565b600033905090565b600080fd5b6000819050919050565b612bf881612be5565b8114612c0357600080fd5b50565b600081359050612c1581612bef565b92915050565b600060ff82169050919050565b612c3181612c1b565b8114612c3c57600080fd5b50565b600081359050612c4e81612c28565b92915050565b60008060408385031215612c6b57612c6a612be0565b5b6000612c7985828601612c06565b9250506020612c8a85828601612c3f565b9150509250929050565b612c9d81612be5565b82525050565b6000602082019050612cb86000830184612c94565b92915050565b600060208284031215612cd457612cd3612be0565b5b6000612ce284828501612c06565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b612d2081612be5565b82525050565b600061ffff82169050919050565b612d3d81612d26565b82525050565b60008115159050919050565b612d5881612d43565b82525050565b60e082016000820151612d746000850182612d17565b506020820151612d876020850182612d17565b506040820151612d9a6040850182612d17565b506060820151612dad6060850182612d17565b506080820151612dc06080850182612d34565b5060a0820151612dd360a0850182612d4f565b5060c0820151612de660c0850182612d17565b50505050565b6000612df88383612d5e565b60e08301905092915050565b6000602082019050919050565b6000612e1c82612ceb565b612e268185612cf6565b9350612e3183612d07565b8060005b83811015612e62578151612e498882612dec565b9750612e5483612e04565b925050600181019050612e35565b5085935050505092915050565b60006020820190508181036000830152612e898184612e11565b905092915050565b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612ebc82612e91565b9050919050565b612ecc81612eb1565b8114612ed757600080fd5b50565b600081359050612ee981612ec3565b92915050565b60008060408385031215612f0657612f05612be0565b5b6000612f1485828601612eda565b9250506020612f2585828601612c06565b9150509250929050565b6000604082019050612f446000830185612c94565b612f516020830184612c94565b9392505050565b6000819050919050565b6000612f7d612f78612f7384612e91565b612f58565b612e91565b9050919050565b6000612f8f82612f62565b9050919050565b6000612fa182612f84565b9050919050565b612fb181612f96565b82525050565b6000602082019050612fcc6000830184612fa8565b92915050565b612fdb81612d26565b82525050565b612fea81612d43565b82525050565b600060e082019050613005600083018a612c94565b6130126020830189612c94565b61301f6040830188612c94565b61302c6060830187612c94565b6130396080830186612fd2565b61304660a0830185612fe1565b61305360c0830184612c94565b98975050505050505050565b60006020820190506130746000830184612fe1565b92915050565b6000602082840312156130905761308f612be0565b5b600061309e84828501612eda565b91505092915050565b600080600080608085870312156130c1576130c0612be0565b5b60006130cf87828801612c06565b94505060206130e087828801612c06565b93505060406130f187828801612c06565b925050606061310287828801612c06565b91505092959194509250565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b61314381612eb1565b82525050565b6000613155838361313a565b60208301905092915050565b6000602082019050919050565b60006131798261310e565b6131838185613119565b935061318e8361312a565b8060005b838110156131bf5781516131a68882613149565b97506131b183613161565b925050600181019050613192565b5085935050505092915050565b600060208201905081810360008301526131e6818461316e565b905092915050565b6131f781612eb1565b82525050565b600060208201905061321260008301846131ee565b92915050565b600082825260208201905092915050565b7f416d6f756e74206d7573742062652067726561746572207468616e206d696e6960008201527f6d756d207374616b696e6720616d6f756e740000000000000000000000000000602082015250565b6000613285603283613218565b915061329082613229565b604082019050919050565b600060208201905081810360008301526132b481613278565b9050919050565b7f496e76616c6964207374616b696e67206475726169746f6e0000000000000000600082015250565b60006132f1601883613218565b91506132fc826132bb565b602082019050919050565b60006020820190508181036000830152613320816132e4565b9050919050565b600060608201905061333c60008301866131ee565b61334960208301856131ee565b6133566040830184612c94565b949350505050565b61336781612d43565b811461337257600080fd5b50565b6000815190506133848161335e565b92915050565b6000602082840312156133a05761339f612be0565b5b60006133ae84828501613375565b91505092915050565b7f546f6b656e207472616e73666572206572726f72000000000000000000000000600082015250565b60006133ed601483613218565b91506133f8826133b7565b602082019050919050565b6000602082019050818103600083015261341c816133e0565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061345d82612be5565b915061346883612be5565b9250817fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff04831182151516156134a1576134a0613423565b5b828202905092915050565b60006134b782612be5565b91506134c283612be5565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156134f7576134f6613423565b5b828201905092915050565b60006060820190506135176000830186612c94565b6135246020830185612c94565b6135316040830184612c94565b949350505050565b60008151905061354881612bef565b92915050565b60006020828403121561356457613563612be0565b5b600061357284828501613539565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f5374616b6520616c72656164792077697468647261776e000000000000000000600082015250565b60006135e0601783613218565b91506135eb826135aa565b602082019050919050565b6000602082019050818103600083015261360f816135d3565b9050919050565b7f4561726c79207265717565737400000000000000000000000000000000000000600082015250565b600061364c600d83613218565b915061365782613616565b602082019050919050565b6000602082019050818103600083015261367b8161363f565b9050919050565b600060408201905061369760008301856131ee565b6136a46020830184612c94565b9392505050565b60006136b682612be5565b91506136c183612be5565b9250828210156136d4576136d3613423565b5b828203905092915050565b7f4f4e4c59204d414e41474552533a204e6f7420617574686f72697a6564000000600082015250565b6000613715601d83613218565b9150613720826136df565b602082019050919050565b6000602082019050818103600083015261374481613708565b9050919050565b600081519050919050565b60005b83811015613774578082015181840152602081019050613759565b83811115613783576000848401525b50505050565b6000601f19601f8301169050919050565b60006137a58261374b565b6137af8185613218565b93506137bf818560208601613756565b6137c881613789565b840191505092915050565b600081519050919050565b600082825260208201905092915050565b60006137fa826137d3565b61380481856137de565b9350613814818560208601613756565b61381d81613789565b840191505092915050565b60006040820190508181036000830152613842818561379a565b9050818103602083015261385681846137ef565b90509392505050565b60006020820190508181036000830152613879818461379a565b905092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60006138bb82612be5565b91506138c683612be5565b9250826138d6576138d5613881565b5b828204905092915050565b7f43616e207769746864726177206e6f726d616c00000000000000000000000000600082015250565b6000613917601383613218565b9150613922826138e1565b602082019050919050565b600060208201905081810360008301526139468161390a565b9050919050565b60006080820190506139626000830187612c94565b61396f6020830186612c94565b61397c6040830185612c94565b6139896060830184612c94565b95945050505050565b7f5061757361626c653a2070617573656400000000000000000000000000000000600082015250565b60006139c8601083613218565b91506139d382613992565b602082019050919050565b600060208201905081810360008301526139f7816139bb565b9050919050565b7f5061757361626c653a206e6f7420706175736564000000000000000000000000600082015250565b6000613a34601483613218565b9150613a3f826139fe565b602082019050919050565b60006020820190508181036000830152613a6381613a27565b905091905056fe4368616e676520456d657267656e637920457869742050656e616c74792052617465a2646970667358221220cf444bdf3ee6598cd0ec30490c00cab45e5a57f58a946328514947571bba1fb164736f6c634300080c0033";

type StakingConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: StakingConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Staking__factory extends ContractFactory {
  constructor(...args: StakingConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    _tokenContractAddress: PromiseOrValue<string>,
    _managersContractAddress: PromiseOrValue<string>,
    _stakePercentagePer1Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer3Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer6Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer12Month: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<Staking> {
    return super.deploy(
      _tokenContractAddress,
      _managersContractAddress,
      _stakePercentagePer1Month,
      _stakePercentagePer3Month,
      _stakePercentagePer6Month,
      _stakePercentagePer12Month,
      overrides || {}
    ) as Promise<Staking>;
  }
  override getDeployTransaction(
    _tokenContractAddress: PromiseOrValue<string>,
    _managersContractAddress: PromiseOrValue<string>,
    _stakePercentagePer1Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer3Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer6Month: PromiseOrValue<BigNumberish>,
    _stakePercentagePer12Month: PromiseOrValue<BigNumberish>,
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _tokenContractAddress,
      _managersContractAddress,
      _stakePercentagePer1Month,
      _stakePercentagePer3Month,
      _stakePercentagePer6Month,
      _stakePercentagePer12Month,
      overrides || {}
    );
  }
  override attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  override connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
